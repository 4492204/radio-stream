#!/bin/sh
function prevent_text() {
	# $1 - dir
	# #2 - string

	echo "scanning directory '$1' for '$2'"
	results=$(ag --color -Q $2 $1)
	exit_code=$?
    echo $results
	echo $exit_code

	if [[ $exit_code -eq 0 ]]; then
	    red='\033[0;31m'
	    plain='\033[0m'
	    echo "${red}[!] Found unwanted string: $2:${plain}"
	    echo $results
	    exit 1
	fi
}

function web_hook() {
	echo "Running web pre-commit hook"
	prevent_text app/app "debugger;"
	prevent_text app/app/test \.only\(

	echo "Running tests..."
	node app/app/node_modules/mocha/bin/_mocha --compilers js:babel-register --ui bdd --recursive app/app/test --require babel-polyfill
	if [[ $? = 0 ]]
	then
	    echo "> Tests passed"
	else
	    echo "> Tests DID NOT pass"
	    exit 1
	fi
}

function android_hook() {
	echo "Running web pre-commit hook"
	
	echo "Running tests..."
	cd app/android
	./gradlew testDebug
	if [[ $? = 0 ]]
	then
	    echo "> Tests passed"
	else
	    echo "> Tests DID NOT pass"
	    exit 1
	fi

}

function any_changes_in_folder() {
	# prevent from being returned
	(>&2 echo "Scanning for changes in folder: $1")
	
	if git diff --cached --name-only | grep --quiet "$1"
	then
	  echo found
	fi	
}


if [ $(any_changes_in_folder ^app/app/) ]; then
	echo "Found changes in app/app"
	web_hook
fi

if [ $(any_changes_in_folder ^app/android) ]; then
	echo "Found changes in app/android"
	android_hook
fi

#husky 0.13.3

command_exists () {
  command -v "$1" >/dev/null 2>&1
}

load_nvm () {
  export $1=$2
  [ -s "$2/nvm.sh" ] && . $2/nvm.sh
  command_exists nvm && [ -f .nvmrc ] && nvm use
}

has_hook_script () {
  [ -f package.json ] && cat package.json | grep -q "\"$1\"[[:space:]]*:"
}

cd app

has_hook_script precommit || exit 0

export PATH=$PATH:/usr/local/bin:/usr/local
load_nvm BREW_NVM_DIR /usr/local/opt/nvm

load_nvm NVM_DIR /Users/vitaly/.nvm

command_exists npm || {
  echo >&2 "> husky - Can't find npm in PATH. Skipping precommit script in package.json"
  exit 0
}

echo
echo "> husky - npm run -s precommit"
echo

export GIT_PARAMS="$*"
npm run -s precommit || {
  echo
  echo "> husky - pre-commit hook failed (add --no-verify to bypass)"
  echo "> husky - to debug, use 'npm run precommit'"
  exit 1
}

echo "Ready to commit"
